// <auto-generated />
using System;
using BookingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingSystem.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20250421173726_AddImageUrlToRoomOrRoomClass")]
    partial class AddImageUrlToRoomOrRoomClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GuestID");

                    b.HasIndex("RoomID");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("BookingSystem.Models.EndUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("endUsers");

                    b.HasDiscriminator().HasValue("EndUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BookingSystem.Models.Feedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BookingID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BookingID");

                    b.ToTable("feedbacks");
                });

            modelBuilder.Entity("BookingSystem.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("RoomClassID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("View")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoomClassID");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Floor = 1,
                            ImageUrl = "~/assets/img/rooms/room1.jpg",
                            Price = 120.00m,
                            Rate = 5,
                            RoomClassID = 1,
                            Status = 0,
                            View = "Sea View"
                        },
                        new
                        {
                            ID = 2,
                            Floor = 2,
                            ImageUrl = "~/assets/img/rooms/room2.jpg",
                            Price = 90.00m,
                            Rate = 3,
                            RoomClassID = 2,
                            Status = 1,
                            View = "City View"
                        },
                        new
                        {
                            ID = 3,
                            Floor = 1,
                            ImageUrl = "assets/img/rooms/room3.jpg",
                            Price = 150.00m,
                            Rate = 5,
                            RoomClassID = 1,
                            Status = 0,
                            View = "Sea View"
                        },
                        new
                        {
                            ID = 4,
                            Floor = 3,
                            ImageUrl = "assets/img/rooms/room4.jpg",
                            Price = 75.00m,
                            Rate = 2,
                            RoomClassID = 2,
                            Status = 2,
                            View = "Garden View"
                        },
                        new
                        {
                            ID = 5,
                            Floor = 4,
                            ImageUrl = "assets/img/rooms/room5.jpg",
                            Price = 200.00m,
                            Rate = 5,
                            RoomClassID = 3,
                            Status = 0,
                            View = "Mountain View"
                        });
                });

            modelBuilder.Entity("BookingSystem.Models.RoomClass", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("roomClasses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "A spacious deluxe room with sea view.",
                            NumberOfBeds = 2,
                            Type = "Deluxe"
                        },
                        new
                        {
                            ID = 2,
                            Description = "A cozy standard room perfect for solo travelers.",
                            NumberOfBeds = 1,
                            Type = "Standard"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Luxurious suite with a private living area.",
                            NumberOfBeds = 3,
                            Type = "Suite"
                        });
                });

            modelBuilder.Entity("BookingSystem.Models.Admin", b =>
                {
                    b.HasBaseType("BookingSystem.Models.EndUser");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("BookingSystem.Models.Guest", b =>
                {
                    b.HasBaseType("BookingSystem.Models.EndUser");

                    b.HasDiscriminator().HasValue("Guest");
                });

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.HasOne("BookingSystem.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("BookingSystem.Models.Feedback", b =>
                {
                    b.HasOne("BookingSystem.Models.Booking", "Booking")
                        .WithMany("Feedbacks")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("BookingSystem.Models.Room", b =>
                {
                    b.HasOne("BookingSystem.Models.RoomClass", "RoomClass")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomClass");
                });

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("BookingSystem.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BookingSystem.Models.RoomClass", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("BookingSystem.Models.Guest", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
